@font-face{
    font-family: '작명~';
    src : url('../font/Pretendard-Medium.woff');
}

@font-face{
    font-family: '작명~';
    font-weight: 800;
    src : url('../font/Pretendard-Bold.woff');
}
div,input,textarea{
    box-sizing: border-box;
  
}

body{
    margin:0px;
    font-family: 'nanumsquare','dotum', 'arial';
    font-weight: 800;
}

p,h4,h3,h2,h1,span{
    transform:rotate(0.03deg)
}





.main-background{
    width:100%;
    height:500px;
    background-image:url(../shoes.jpg);
    background-size:100%;
    /*꽉 차지 않으면 반복. 그걸 방지하기 위해선
    아래의 css 속성 부여*/
    background-repeat: no-repeat;
    /*cover : 배경 짤려도 상관없으니 빈공간 없이 배경으로 꽉채워라
      contain : 배경짤리면 안됩니다*/
    background-size:contain;
    /* 스크롤시 배경 위치 조정가능 */
    /*background-attachment: fixed;*/
    /* 배경 위치 조정 가능 */
    background-position:center;

    /* 박스에 보정입히기
       안에 글씨 있으면 글씨에도 필터입혀짐 
    filter : brightness(70%); */

    padding:1px;
    /* 배경에 검은색 오버레이 */
    /*background-image: linear-gradient( rgba(0,0,0,0.5), rgba(0,0,0,0.5) ), url(../shoes.jpg) ;*/
}

.main-title {
    text-align: center;
    color: white;
    font-size: 40px;
    margin-top:50px;
}

.main-ex{
    text-align: center;
    color:white;
    margin-bottom:100px;
    font-size:20px;
}

.main-button{
    /*위에서 부터 npx*/
    margin-top: 500px;
    padding:15px;
    font-size:20px;
    background:white;
    border:none;
    border-radius: 5px;
    position:absolute;
    width:150px;

    /*absolute 가운데 정렬법 */
    left:0;
    right:0;
    margin:auto;
    


    /*bottom:20px;
    right:20px;*/

    /*position부여하면
    1. 좌표 이동 가능
    2. 공중에 뜸
    position:relative; 내 원래 위치를 기준으로 이동
    position:static;  : 좌표 이동 x
    position:fixed; : 현재 화면 기준으로 고정
    position:absolute; :내 부모태그중 relative 가진 부모 기준으로 위치 이동*/
}

.pseudo::after{
    content:'안녕';
    color:red;
    font-size:30px;
}
.bottom-box{
    background:rgb(228, 228, 228);
    width:500px;
    position:relative;
    left:0;
    right:0;
    margin:auto;
    margin-top:-50px;
    padding-bottom:20px;
    padding-top:20px;

    /* 이러면 width가 padding ,border 포함함*/
    box-sizing:border-box;
}

.bottom-title{
 text-align: center;
 margin-bottom:20px;

    
}

.bottom-ex{
    text-align:center;
    font-size:12px;
 
}

/* z- index : 레이어 개념. 높을 수록 앞에 옴
   max-width:600px   == 최대 600px 이상 커지지 않음 반응형 웹?에서 쓰이는편
   width는 content 영역의 너비를 의미함.

   if:width를 600으로 해도 좌우 padding이 50px 이라면 실제 보이는 값은 700임
   따라서 content부분만 width로 설정하지 말고 padding,border 포함하라고 시키면됨*/

    /* 모든 인풋이지만 타입이 텍스트인것만 적용*/
   .text-input[type=text]{
       padding:20px;
       font-size:20px;
       border: 2px solid black;
       border-radius: 5px;
   }

   div,input,textarea{
    box-sizing:border-box;
}

 .form-background{

     padding:30px;
 }

 .form-white{
    background-color:white;
     padding:30px;
     width:80%;
     max-width:600px;
     margin:auto;
 }

 .form-input{
     width:100%;
     padding:10px;
     font-size:20px;
     border:1px solid black;
     border-radius:5px;
 }

 .w-100{
     padding:10px;
 }
 .w-50{
     width: 50%;
     float:left;
     padding:10px;
 }

 .form-long{
     height:200px;
 }

 .yello-button{
    width:100px;
    float:right;
    padding:5px;
    background:rgb(255, 165, 48);
    color:white;
    border:none;
    border-radius: 5px;

 }

 .footer{
     margin-top:10px;
 }

 /*flex box 
 .flex-container{
    display:flex;


 }
 .flex-item{
     width: 100%;
     height: 100px;
     background-color:gray;
     margin:5px;
 } */


 .nav-container{
    display: flex;
    height:50px;
    align-items: center;
    padding:10px;
 }

 .nav-item{
     margin-right:10px;
 }

 /* 3. 반응형 레이아웃 만들기 */

 /* .test{
     width: 20rem;
     height: 50px;
     background:gray;
 } */

 @media screen and (max-width:1200px){
     .main-title{
         font-size:30px;
     }
     .nav-item{
         font-size: 12px;
     }
 }

 @media screen and (max-width: 768px){
    .main-title{
        font-size:20px;
    }
 }

 @media screen and (max-width:576px){
     .main-title{
         font-size: 10px;
     }
 }

 /* 숙제 */

 .explain-container>div{
     float:left;
     width:25%;
     text-align: center;
     margin-top:30px;
 }

 @media screen and (max-width:992px){
     .explain-container>div{
         float:left;
         width:50%;
     }
 }

 @media screen and (max-width:768px){
     .explain-container>div{
         float:none;
         width:100%;
     }
 }

 /* 6. font awesome 아이콘 */
 .explain-container i{
    color:white;
    background-color:burlywood;
    width:100px;
    height:100px;
    border-radius:50px;
    padding-top:25px;
    box-sizing:border-box;
    margin-top:20px;
 }

 /* 7. Transition 속성으로 css 애니메이션 구현하기 */
 .shop-bg{
     background-color: #eee;
     padding: 20px;
 }

 .shop-container{
     display:flex;
     width:90%;
     margin:auto;
 }

 .shop-item{
     width:33%;
     padding:10px;
 }

 .shop-item img{
     width:100%;
     display:block;
 }

 .overlay-wrap{
     position:absolute;
     width:100%;
     height:100%;
     overflow: hidden;
 }

 
 /* .overlay{
     position:absolute;
     width: 100%;
     height: 100%;
     background:rgba(0,0,0,0.5);
     opacity: 0;
     transition: all 0.3s;
     transition-timing-function: cubic-bezier(0.5,0.5,.5,0.5);
 } */

 .overlay-black{
     width:100%;
     height:100%;
     opacity: 0.5;
     background-color:rgba(0,0,0.3);
     margin-top: 100%;
     transition: all 0.7s;
     
 }

 .overlay-wrap:hover .overlay-black{
    margin-top:50%;
 }
 .overlay:hover{
     opacity: 1;

 }