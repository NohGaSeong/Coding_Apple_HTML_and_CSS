.main-btn-red{
    font-size:20px;
    padding:15px;
    border:none;
    cursor:pointer;
    background:red;
}

.main-btn-blue{
    font-size:20px;
    padding:15px;
    border:none;
    cursor:pointer;
    background:blue;
}

/*위 마냥 코드짜면 너무 길어지고 로딩속도 느려짐*/
/* 그래서 이렇게 짜봅시다. 뼈대와 살을 분리하는거지*/

.main-btn {
  font-size : 20px;
  padding : 15px;
  border : none;
  cursor : pointer;
}

.bg-red {
  background : red;
}
.bg-blue {
  background : blue;
}

/*이렇게 뼈와 살을 각각의 class로 분리하는 방법의 장점은 

1. 중복된 스타일을 재사용가능합니다.

덕분에 CSS 파일용량도 줄어들고 코딩 시간도 절약됩니다.

 

2. 유지보수가 편리해집니다.

사이트의 모든 버튼의 font-size를 약간 줄여야한다면 이 경우엔 한 곳만 건드리면 모든 버튼이 다 수정되겠죠? 편리합니다.

 

3. 코드 개빨리 짤 수 있습니다.

.bg-red 이렇게 색깔놀이용 class들을 전문용어로 utility class라고 부릅니다. 

이걸 미리 많이 만들어두면 앞으로 버튼만들 때 class명을 두세개 고르기만 하면 되니까

css 파일 열지않고도 다양한 스타일을 빠르게 만들 수 있습니다.

(class명을 미리 외워두면요)


 지금까지 설명한 뼈와 살을 분리하는 CSS 작성방식을 Object Oriented CSS 라고 부릅니다.

어떤 아저씨가 옛날에 주장한건데 장점이 많아 실제 개발시 자주 사용합니다.

이걸 잘 쓰는 라이브러리가 Bootstrap인데 나중에 알아봅시다. /*